<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gelato.app.prd.prdLine.dao.PrdLineMngMapper">

<!-- 그리드1 -->
	<select id="lineGrid" resultType="PrdLineMngVO">
		select p.prdt_id as prdt_id, 
		       p.prdt_nm as prdt_nm, 
		       l.line_id as line_id,
		       substr(l.line_id, 5,3) as prcsDeta
		from prdt p left outer join line l
		    on p.prdt_id = l.prdt_id
		group by p.prdt_id, p.prdt_nm, l.line_id
		 
		union
		
		select r.rwmatr_id as prdt_id, 
		       r.nm as prdt_nm, 
		       l.line_id as line_id,
		       substr(l.line_id, 5,3) as prcsDeta
		from rwmatr r left outer join line l
		    on r.rwmatr_id = l.prdt_id
		where r.fg = 'STEP02'
		group by r.rwmatr_id, r.nm, l.line_id
	</select>
	
<!-- 그리드2 -->	
	<select id="linePrcsGrid" resultType="PrdLineMngVO">
		select l.prdt_id as prdt_id,
			   p.prcs_id as prcs_id, 
			   p.nm as nm, 
			   p.eqm_id as eqm_id, 
			   e.eqm_name as eqm_name,
			   l.line_id as line_id
		from line l join prcs p
		    on l.prcs_id = p.prcs_id
		    join eqm e
		    on p.eqm_id = e.eqm_id
		where l.prdt_id = #{prdtId}
		ORDER BY l.ord
	</select>
	
<!-- 라인등록 -->
	<insert id="insertLineDeta" parameterType="PrdLineMngVO">
		<selectKey keyProperty="lineId" resultType="string" order="BEFORE">
			SELECT 'LIN-' || #{prcsDeta} || '-' || SUBSTR(('00'||to_char((substr(max(line_id),10))+1)),-3)
			FROM LINE
			where SUBSTR(line_id, 5, 3) = #{prcsDeta}
		</selectKey>
		insert into line (line_id, 
						  ord, 
						  prcs_id, 
						  prdt_id) 
		values (
				 #{lineId},
				 #{ord},
				 #{prcsId},
				 #{prdtId}
				)
	</insert>
	
<!-- 공정삭제 -->
	<delete id="deleteLineDeta" parameterType="PrdLineMngVO">
		delete line
		where LINE_ID = #{lineId}
		      AND ORD = #{ord}
	</delete>
	
<!-- 공정 삭제시 순번 업데이트 -->
	<select id="updateLineOrd" resultType="PrdLineMngVO">
		update line
		set ORD = #{ord}
		where prdt_id = #{prdtId}
	</select>
	
<!-- 단건추가 -->
	<insert id="insertPrcsDeta" parameterType="PrdLineMngVO">
		insert into line (line_id, 
						  ord, 
						  prcs_id, 
						  prdt_id) 
		values (
				 #{lineId},
				 #{ord},
				 #{prcsId},
				 #{prdtId}
				)
	</insert>
	
<!-- 공정수정 -->	
	<update id="updateLineDeta" parameterType="PrdLineMngVO">
		update line
		set prcs_id = #{prcsId}
		where prdt_id = #{prdtId} and ord = #{ord}
	</update>
	
<!-- 공정이동표 -->	
	<select id="prdtMoveInfo" resultType="PrdLineMngVO">
		select pid.indica_deta_id as indica_deta_id, 
			   pid.line_id as line_id, 
			   l.prdt_id as prdt_id, 
			   p.prdt_nm as prdt_nm, 
			   pid.qy as qy
		from prod_indica_deta pid join line l
		    on pid.line_id = l.line_id
		    join prdt p
		    on l.prdt_id = p.prdt_id
		where pid.indica_deta_id = #{indicaDetaId}
		group by pid.indica_deta_id, pid.line_id, l.prdt_id, p.prdt_nm, pid.qy
		
		UNION

		select pid.indica_deta_id as indica_deta_id, 
			   pid.line_id as line_id, 
			   l.prdt_id as prdt_id, 
			   r.nm as prdt_nm, 
			   pid.qy as qy
		from prod_indica_deta pid join line l
		    on pid.line_id = l.line_id
		    join RWMATR r
		    on l.prdt_id = r.rwmatr_id
		where pid.indica_deta_id = #{indicaDetaId}
		group by pid.indica_deta_id, pid.line_id, l.prdt_id, r.nm, pid.qy
	</select>
	
<!-- 공정이동표에 공정정보 보내기 -->
	<select id="prdtPrcsMoveInfo" resultType="com.gelato.app.prd.prdPrcs.dao.PrdPrcsMngVO">
		select pn.prcs_now_id as prcs_now_id,
		       pn.prcs_id as prcs_id,
		       pr.nm as nm,
		       e.eqm_id as eqm_id,
		       e.eqm_name as eqm_name,
		       e.mngr as mngr,
		       pn.inpt_qy as inptQyT,
		       sum(esn.infer_qy) as inferQyT,
		       sum(esn.prod_qy) as prodQyT
		from prod_indica_deta pid join PRCS_NOW PN
		    ON pid.indica_deta_id = pn.indica_deta_id
		    left outer JOIN PRCS PR
		    ON pn.prcs_id = pr.prcs_id
		    left outer JOIN EQM E
		    ON pr.eqm_id = e.eqm_id
		    JOIN eqm_st_now esn
		    ON pr.eqm_id = esn.eqm_id
		where pid.indica_deta_id = #{indicaDetaId}
		    AND trunc(esn.log_tm) = (select indica_dt from prod_indica_deta
                                    where indica_deta_id = #{indicaDetaId})
		group by pid.indica_deta_id, pid.line_id, pid.qy,pn.prcs_now_id,pn.prcs_id,pr.nm,
		        e.eqm_id,
		       e.eqm_name,e.mngr,pn.inpt_qy
		order by pn.prcs_now_id
	</select> 
</mapper>