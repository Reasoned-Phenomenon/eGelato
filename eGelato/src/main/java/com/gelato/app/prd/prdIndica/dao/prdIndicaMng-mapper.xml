<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gelato.app.prd.prdIndica.dao.PrdIndicaMngMapper">

<!-- 미지시 생산계획 조회 -->
	<select id="nonIndicaList" resultType="PrdIndicaMngVO">
		select pp.plan_id as plan_id, 
		       pp.name as name,
		       ppd.plan_deta_id as plan_deta_id
		from prod_plan pp right outer join prod_plan_deta ppd
		    on pp.plan_id = ppd.plan_id
		    left outer join prod_indica pi
		    on ppd.plan_deta_id = pi.plan_deta_id
		    left outer join prod_indica_deta pid
		    on pi.indica_id = pid.indica_id
		group by ppd.plan_deta_id, pp.plan_id, pp.name,ppd.prod_dcnt, pi.indica_id
		having ppd.prod_dcnt != count(pid.indica_id)
		order by pp.plan_id
	</select>
	
<!-- 생산계획조회 그리드 출력 -->
	<select id="choosePlan" resultType="PrdIndicaMngVO">
		select ppd.plan_deta_id as plan_deta_id, 
		       p.prdt_nm as prdt_nm,
		       ppd.qy as qy, 
		       ppd.prod_dcnt as prod_dcnt,
               sum(pid.qy) as qy_val
		from prod_plan_deta ppd join prdt p
		    on ppd.prdt_id = p.prdt_id
		    left outer join prod_indica pi
		    on ppd.plan_deta_id = pi.plan_deta_id
		    left outer join prod_indica_deta pid
		    on pi.indica_id = pid.indica_id
		where ppd.plan_deta_id = #{planDetaId}
		group by ppd.plan_deta_id,p.prdt_nm, ppd.qy, ppd.prod_dcnt
		having ppd.prod_dcnt != count(pid.indica_deta_id)
	</select>
	
<!-- 생산지시 그리드 출력 -->
	<select id="choosePlanDetaId" resultType="PrdIndicaMngVO">
		select l.line_id as line_id,
			   (select 'PID-' || to_char(sysdate, 'yyyyMMdd') || '-' || lpad(nvl2(substr(max(indica_deta_id),14),(substr(max(indica_deta_id),14)+1), 1), 3, '0')
                    as indica_deta_id
                    from prod_indica_deta
                    where substr(indica_deta_id,5,8) = to_char(sysdate, 'yyyyMMdd')) as indica_deta_id
		from prod_plan_deta ppd join line l
		    on ppd.prdt_id = l.prdt_id
		where ppd.plan_deta_id = #{planDetaId}
		group by l.line_id
	</select>
	
<!-- 필요자재 그리드 출력 -->
	<select id="chooseIndicaQy" resultType="PrdIndicaMngVO">
		select l.prdt_id as prdt_id, 
			   b.rwmatr_id as rwmatr_id, 
			   r.nm as nm, 
			   (b.qy*#{qy}/10) as qy,
			   ppd.plan_deta_id as plan_deta_id
		from  prdt p join line l 
		    on p.prdt_id = l.prdt_id
		    join bom b
		    on p.prdt_id = b.prdt_id
		    join rwmatr r
		    on b.rwmatr_id = r.rwmatr_id
		    join prod_plan_deta ppd
    		on p.prdt_id = ppd.prdt_id
		where l.line_id = #{lineId}
			and ppd.plan_deta_id = #{planDetaId}
		group by l.prdt_id, b.rwmatr_id, r.nm, b.qy, ppd.plan_deta_id
		order by b.rwmatr_id
	</select>

<!-- 자재 선택 후 lot 정하기 -->
	<select id="chooseRwmatrId" resultType="PrdIndicaMngVO">
		select rs.lot_no as lotNo,
			   rs.qy as qy,
			   trunc(rs.expdate) as expdate
		from rwmatr rw join rwmatr_stc rs
		    on rw.rwmatr_id = rs.rwmatr_id
		where rw.rwmatr_id = #{rwmatrId}
		ORDER BY rs.expdate asc
	</select>

<!-- 생산지시T insert 프로시저 -->
	<parameterMap type="PrdIndicaMngVO" id="IndicaParam">
		<parameter property="planDetaId" mode="IN" jdbcType="VARCHAR" javaType="string"/>
	</parameterMap>
	
	<insert id="insertPrdIndica" statementType="CALLABLE" parameterMap="IndicaParam" >
		{ call insert_indica_id(?) }
	</insert>

<!-- 계획지시디테일 insert -->
	<insert id="insertPrdIdicaDeta" parameterType="PrdIndicaMngVO">
		insert into prod_indica_deta (indica_deta_id, 
									  indica_id, 
									  qy, 
									  line_id, 
									  ord, 
									  indica_dt, 
									  remk)
		values (#{indicaDetaId},
		        (select indica_id
		         from  prod_indica 
		         where plan_deta_id = #{planDetaId}),
		        #{qy},
		        #{lineId},
		        #{ord},
		        #{indicaDt},
		        #{remk}
		        )
	</insert>

<!-- 투입원자재 insert 프로시저-->
	<parameterMap type="PrdIndicaMngVO" id="inptRwParam">
		<parameter property="prdtId" mode="IN" jdbcType="VARCHAR" javaType="string"/>
		<parameter property="ord" mode="IN" jdbcType="VARCHAR" javaType="string"/>
		<parameter property="oustQy" mode="IN" jdbcType="VARCHAR" javaType="string"/>
		<parameter property="lotNo" mode="IN" jdbcType="VARCHAR" javaType="string"/>
		<parameter property="indicaDetaId" mode="IN" jdbcType="VARCHAR" javaType="string"/>
	</parameterMap>
	<insert id="insertInptRwmatr"  statementType="CALLABLE" parameterMap="inptRwParam">
		{ call insert_rwmatr(?,?,?,?,?) }
	</insert>
	
<!-- 홀딩값 update -->
	<update id="updateExcp" parameterType="PrdIndicaMngVO">
		<selectKey keyProperty="qy" resultType="string" order="BEFORE">
			select e.qy
			as qy
            from excp e join prod_plan_deta ppd
                on e.plan_id = ppd.plan_id
                join rwmatr r
                on e.rwmatr_id = r.rwmatr_id
            where ppd.plan_deta_id = #{planDetaId}
                  and r.nm = #{nm}
		</selectKey>
		
		update excp 
		set qy = to_number(#{qy}) - to_number(#{oustQy})*10
		where plan_id in (select e.plan_id
							as plan_id
		                    from excp e join prod_plan_deta ppd
		                        on e.plan_id = ppd.plan_id
		                    where ppd.plan_deta_id = #{planDetaId})
		      and rwmatr_id in (select e.rwmatr_id
		                        from excp e join prod_plan_deta ppd
		                            on e.plan_id = ppd.plan_id
		                            join rwmatr r
		                            on e.rwmatr_id = r.rwmatr_id
		                        where ppd.plan_deta_id = #{planDetaId}
		                              and r.nm = #{nm})
	</update>
	
<!-- 원자재 현재고 update -->
	<update id="updateRwmatrStc" parameterType="PrdIndicaMngVO">
		update rwmatr_stc
		set qy = (to_number(qy) - to_number(#{oustQy}))
		where lot_no = #{lotNo}
	</update>

<!-- 원자재 입출고 insert -->	
	<insert id="insertRwmatrIstOust" parameterType="PrdIndicaMngVO">
	<selectKey keyProperty="rwmatrOrderDetaId" resultType="string" order="BEFORE">
		select rwmatr_order_deta_id
		as rwmatrOrderDetaId
		from rwmatr_ist_oust
		where lot_no = #{lotNo}
		group by rwmatr_order_deta_id
	</selectKey>
		insert into rwmatr_ist_oust (rwmatr_id, 
									 lot_no, 
									 ist_oust_dttm, 
									 ist_qy, 
									 oust_qy, 
									 expdate, 
									 rwmatr_order_deta_id)
		values ((select rwmatr_id
		            from rwmatr
		            where nm = #{nm}),
		        #{lotNo},
		        sysdate,
		        '0',
		        #{oustQy},
		        to_char(#{expdate}, 'yyyyMMdd'),
		        #{rwmatrOrderDetaId}
		        )
	</insert>

	
</mapper>